cpr_potentially_learn_secret_mutual_effect = {
	save_temporary_scope_as = character1
	cpr_potentially_learn_secret_effect = { CHARACTER = $CHARACTER$ }
	$CHARACTER$ = {
		cpr_potentially_learn_secret_effect = { CHARACTER = scope:character1 }
	}
}

# Potentially learn any secret known by $CHARACTER$ after an intrigue duel.
cpr_potentially_learn_secret_effect = {
	save_temporary_scope_as = secret_learner
	$CHARACTER$ = { save_temporary_scope_as = secret_knower }
	custom_tooltip = cpr_may_learn_secret_tooltip

	hidden_effect = {
		if = {
			limit = {
				$CHARACTER$ = {
					any_known_secret = {
						NOT = { is_known_by = scope:secret_learner }
					}
				}
			}
			duel = {
				skill = intrigue
				value = {
					value = $CHARACTER$.intrigue
					if = {
						limit = {
							$CHARACTER$ = {
								carn_is_working_as_prostitute_trigger = yes
							}
						}
						add = 5
					}
				}
				50 = { # Success, secret learned
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					$CHARACTER$ = {
						random_known_secret = {
							limit = {
								NOT = { is_known_by = scope:secret_learner }
							}
							save_temporary_scope_as = learned_secret
						}
					}
					cpr_debug_log_1_effect = {
						MSG = cpr_debug_msg_character_learned_secret
						NAME1 = learned_secret TYPE1 = flag:secret
					}
					send_interface_message = {
						type = secret_discovered_message
						title = ep2_tournament_events.1503.b.success # You discover a secret
						left_icon = $CHARACTER$
						scope:learned_secret = {
							reveal_to_without_events_effect = {
								CHARACTER = scope:secret_learner
							}
						}
					}
				}
				50 = { # Failure, secret not learned
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
				}
			}
		}
	}
}