# Force one of your slaves to stop working as a prostitute.
# Overridden from Carnalitas
carn_force_stop_prostitution_interaction = {
	category = interaction_category_uncategorized
	desc = carn_force_stop_prostitution_interaction_desc
	interface_priority = 100
	common_interaction = yes
	icon = cpr_prostitution

	is_shown = {
		NOT = { has_game_rule = carn_slavery_content_disabled }
		scope:actor = {
			has_relation_slave = scope:recipient
		}
		scope:recipient = {
			cpr_is_slave_trigger = yes
			carn_is_working_as_prostitute_trigger = yes
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			cpr_can_start_interaction_trigger = yes
		}
		scope:recipient = {
			cpr_slave_has_pending_transaction = no
		}
	}

	on_accept = {
		if = {
			limit = { debug_only = yes }

			scope:actor = {
				save_temporary_scope_value_as = {
					name = force_prostitution_ai_willingness
					value = cpr_force_prostitution_ai_willingness_value
				}
				cpr_debug_log_1_effect = {
					MSG = cpr_debug_msg_force_stop_prostitution_interaction_accepted
					NAME1 = force_prostitution_ai_willingness TYPE1 = flag:value
				}
			}

			custom_tooltip = cpr_debug_force_prostitution_ai_willingness_tooltip
		}

		save_scope_value_as = { name = cpr_event value = flag:interaction }
		scope:actor = {
			cpr_force_stop_prostitution_interaction_effect = { SLAVE = scope:recipient }
		}
	}

	auto_accept = yes

	ai_min_reply_days = 0
	ai_max_reply_days = 0

	ai_targets = {
		ai_recipients = scripted_relations
	}

	ai_frequency = 24

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 0
		modifier = {
			cpr_force_prostitution_ai_willingness_value <= 0
			add = 100
		}
	}
}
