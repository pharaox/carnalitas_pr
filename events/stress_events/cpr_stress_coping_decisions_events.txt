namespace = cpr_stress_trait_coping_decisions

# Rakish stress coping decision event.
# Rewrite of stress_trait_coping_decisions.2001.
cpr_stress_trait_coping_decisions.2001 = {
	type = character_event
	title = stress_trait_coping_decisions.2001.t

	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { is_female = yes }
				desc = stress_trait_coping_decisions.2001.desc_woman
			}
			desc = stress_trait_coping_decisions.2001.desc_man
		}
		desc = stress_trait_coping_decisions.2001.desc_ending
	}

	theme = mental_break
	override_background = { reference = tavern }

	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:prostitute
		animation = flirtation_left
	}

	trigger = {
		is_available_adult = yes
		short_term_gold >= minor_gold_value
		is_eunuch_trigger = no
		NOT = { has_trait = celibate }
		carn_can_have_sex_trigger = yes
		OR = {
			exists = scope:from_stress_loss_decision
			has_trait = lustful
		}
	}

	immediate = {
		cpr_debug_log_effect = { MSG = cpr_debug_msg_stress_trait_coping_decisions_2001_fired }

		hidden_effect_new_object = {
			# Find prostitute
			cpr_get_prostitute_effect = {
				LOCATION = root.capital_province
				CHARACTER = root
				PROSTITUTE = prostitute
			}

			# Avoid incorrect tooltip from had_sex_with_effect
			add_character_flag = no_sex_stress_loss

			# Undress characters
			add_character_flag = is_naked
			scope:prostitute = {
				add_character_flag = is_naked
			}
		}
	}

	option = {
		name = stress_trait_coping_decisions.2001.a

		trigger = {
			has_trait = rakish
		}
		trait = rakish

		rakish_brothel_night_effect = yes
		pay_short_term_gold = {
			target = scope:prostitute
			gold = minor_gold_value
		}
	}

	option = {
		name = stress_trait_coping_decisions.2001.a

		trigger = {
			has_trait = lustful
			NOT = { has_trait = rakish }
		}
		trait = lustful

		rakish_brothel_night_effect = yes
		pay_short_term_gold = {
			target = scope:prostitute
			gold = minor_gold_value
		}
	}

	after = {
		remove_character_flag = no_sex_stress_loss

		# Dress characters
		remove_character_flag = is_naked
		scope:prostitute = {
			remove_character_flag = is_naked
		}
	}
}


# Your stuff got stolen by a person in a brothel!
# Rewrite of stress_trait_coping_decisions.2002.
cpr_stress_trait_coping_decisions.2002 = {
	type = character_event
	title = stress_trait_coping_decisions.2002.t

	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { is_female = yes }
				desc = stress_trait_coping_decisions.2002.desc_woman
			}
			desc = stress_trait_coping_decisions.2002.desc_man
		}
		desc = stress_trait_coping_decisions.2002.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = { exists = scope:rival }
					desc = stress_trait_coping_decisions.2002.desc_ending_rival
				}
				desc = stress_trait_coping_decisions.2002.desc_ending
			}
		}
	}

	theme = mental_break
	override_background = { reference = tavern }

	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:prostitute
		animation = scheme
	}
	lower_center_portrait = {
		trigger = { exists = scope:rival }
		character = scope:rival
		animation = schadenfreude
	}

	trigger = {
		is_available_adult = yes
		short_term_gold >= 20
		is_eunuch_trigger = no
		NOT = { has_trait = celibate }
		carn_can_have_sex_trigger = yes
		OR = {
			exists = scope:from_stress_loss_decision
			has_trait = lustful
		}
	}

	weight_multiplier = {
		base = 1
		modifier = { # More likely if you have a rival and it's triggered from the yearly pulse
			add = 2
			NOT = { exists = scope:from_stress_loss_decision }
			any_relation = {
				type = rival
				is_ai = yes
			}
		}
	}

	immediate = {
		cpr_debug_log_effect = { MSG = cpr_debug_msg_stress_trait_coping_decisions_2002_fired }

		# Find rival
		if = {
			limit = {
				any_relation = {
					type = rival
					is_ai = yes
				}
			}
			random_relation = {
				type = rival
				limit = {
					is_ai = yes
				}
				save_scope_as = rival
			}
		}

		hidden_effect_new_object = {
			# Find prostitute
			cpr_get_prostitute_effect = {
				LOCATION = root.capital_province
				CHARACTER = root
				PROSTITUTE = prostitute
			}

			# Avoid incorrect tooltip from had_sex_with_effect
			add_character_flag = no_sex_stress_loss

			# Undress characters
			add_character_flag = is_naked
			scope:prostitute = {
				add_character_flag = is_naked
			}
		}
	}

	option = {
		name = stress_trait_coping_decisions.2002.a

		trigger = {
			has_trait = rakish
			NOT = { exists = scope:rival }
		}
		trait = rakish

		rakish_brothel_night_effect = yes
		pay_short_term_gold = {
			target = scope:prostitute
			gold = {
				value = minor_gold_value
				multiply = 2
			}
		}
		add_prestige = minor_prestige_loss
	}

	option = {
		name = stress_trait_coping_decisions.2002.a

		trigger = {
			has_trait = lustful
			NOR = {
				exists = scope:rival
				has_trait = rakish
			}
		}
		trait = lustful

		rakish_brothel_night_effect = yes
		pay_short_term_gold = {
			target = scope:prostitute
			gold = {
				value = minor_gold_value
				multiply = 2
			}
		}
		add_prestige = minor_prestige_loss
	}

	option = {
		name = stress_trait_coping_decisions.2002.b

		trigger = {
			exists = scope:rival
		}

		rakish_brothel_night_effect = yes
		pay_short_term_gold = {
			target = scope:prostitute
			gold = {
				value = minor_gold_value
				multiply = 2
			}
		}
		add_prestige = minor_prestige_loss
	}

	after = {
		remove_character_flag = no_sex_stress_loss

		# Dress characters
		remove_character_flag = is_naked
		scope:prostitute = {
			remove_character_flag = is_naked
		}
	}
}

cpr_stress_trait_coping_decisions.2004 = {
	type = character_event
	title = stress_trait_coping_decisions.2004.t
	desc = stress_trait_coping_decisions.2004.desc

	cooldown = { years = 10 }

	theme = mental_break
	override_background = { reference = market }

	left_portrait = { 
		character = root
		animation = stunned
	}
	right_portrait = {
		character = scope:prostitute
		animation = newborn
	}
	lower_center_portrait = scope:baby

	trigger = {
		scope:pregnant_prostitute ?= {
			is_alive = yes
			any_child = {
				age < 1
				real_father = root
			}
		}
	}

	immediate = {
		cpr_debug_log_effect = { MSG = cpr_debug_msg_stress_trait_coping_decisions_2004_fired }

		# Save pregnant prostitute as prostitute
		scope:pregnant_prostitute = {
			save_scope_as = prostitute
		}

		# Save characters who might be annoyed at your claiming a bastard
		every_spouse = { 
			add_to_list = insulted_list
		}
		every_child = {
			limit = {
				NOR = {
					has_trait = bastard
					has_trait = wild_oat
				}
			}
			add_to_list = insulted_list
		}
		every_relation = {
			type = lover
			add_to_list = insulted_list
		}

		# Create a child of real father and prostitute
		scope:prostitute = {
			random_child = {
				limit = {
					age < 1
					real_father = root
				}
				save_scope_as = baby
			}
		}

		# Add bastardy trait to child
		scope:baby = {
			if = {
				limit = {
					faith = { has_doctrine = doctrine_bastardry_none }
				}
				add_trait = wild_oat
			}
			else = {
				add_trait = bastard
			}
		}
	}

	option = { # Claim child as own
		name = stress_trait_coping_decisions.2004.a

		scope:baby = {
			set_father = root
			set_house = root.house
		}

		if = {
			limit = {
				scope:prostitute = {
					NOT = { is_courtier_of = root }
				}
			}
			add_courtier = scope:prostitute
		}
		if = {
			limit = {
				scope:baby = {
					NOT = { is_courtier_of = root }
				}
			}
			add_courtier = scope:baby
		}

		every_in_list = {
			list = insulted_list
			custom = stress_trait_coping_decisions_2004_a_custom
			limit = {
				NOR = {
					this = scope:baby
					this = scope:prostitute
				}
			}
			add_opinion = {
				target = root
				modifier = angry_opinion
				opinion = -25
			}
			add_opinion = {
				target = scope:prostitute
				modifier = angry_opinion
				opinion = -50
			}
			add_opinion = {
				target = scope:baby
				modifier = angry_opinion
				opinion = -50
			}
		}

		add_legitimacy = major_legitimacy_loss

		stress_impact = {
			base = minor_stress_impact_gain
			callous = medium_stress_impact_gain
			paranoid = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
			humble = minor_stress_impact_loss
			compassionate = medium_stress_impact_loss
		}
	}

	option = { # Take child and mother into court, but don't acknowledge them as your own
		name = stress_trait_coping_decisions.2004.b

		add_piety = minor_piety_gain

		if = {
			limit = {
				scope:prostitute = {
					NOT = { is_courtier_of = root }
				}
			}
			add_courtier = scope:prostitute
		}
		if = {
			limit = {
				scope:baby = {
					NOT = { is_courtier_of = root }
				}
			}
			add_courtier = scope:baby
		}

		every_in_list = {
			list = insulted_list
			custom = stress_trait_coping_decisions_2004_a_custom
			limit = {
				NOR = {
					this = scope:baby
					this = scope:prostitute
				}
			}
			add_opinion = {
				target = root
				modifier = angry_opinion
				opinion = -10
			}
			add_opinion = {
				target = scope:prostitute
				modifier = angry_opinion
				opinion = -25
			}
			add_opinion = {
				target = scope:baby
				modifier = angry_opinion
				opinion = -25
			}
		}

		stress_impact = {
			callous = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			generous = medium_stress_impact_loss
			compassionate = minor_stress_impact_loss
		}
	}

	option = { # Reject child and mother
		name = stress_trait_coping_decisions.2004.c

		stress_impact = {
			base = medium_stress_impact_gain
			callous = minor_stress_impact_loss
			compassionate = medium_stress_impact_gain
			honest = medium_stress_impact_gain
		}
	}
}